{"version":3,"file":"default-test.js","mappings":";;UAAA;UACA;;;;;WCDA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;ACNA,MAAM,2BAA4B;;ACAlC,MAAM,oBAA4B;;;ACAlC,MAAM,yBAA4B;;;ACAA;AAEP;AACK;AAEzB,IAAII,OAAgB,GAAG;EAC5BC,GAAG,EAAE,EAAE;EACPC,QAAQ,EAAE;AACZ,CAAC;AAED,mDAAe,YAAM;EACnB,IAAMC,GAAG,GAAGL,kBAAQ,CAAC,wBAAwB,CAAC;EAC9CD,qCAAK,CAACM,GAAG,EAAE;IACT,eAAe,EAAE,SAAAE,YAAA;MAAA,OAAMF,GAAG,CAACG,MAAM,KAAK,GAAG;IAAA;EAC3C,CAAC,CAAC;EACFV,qCAAK,CAAC,CAAC,CAAC;AACV,CAAC;AAGM,SAASW,IAAIA,CAAA,EAAS;EAC3BC,OAAO,CAACC,GAAG,6EAAAC,MAAA,CAGKX,8BAAa,CAACa,SAAS,kCAAAF,MAAA,CACbX,8BAAa,CAACc,mBAAmB,qCAAAH,MAAA,CAC9BX,8BAAa,CAACe,qBAAqB,mCAAAJ,MAAA,CACrCX,8BAAa,CAACc,mBAAmB,gCAAAH,MAAA,CACpCX,8BAAa,CAACa,SAAS,8BAAAF,MAAA,CACzBX,8BAAa,CAACgB,cAAc,gDAAAL,MAAA,CACVX,8BAAa,CAACiB,sBAAsB,kFAAAN,MAAA,CAI1CX,8BAAa,CAACmB,IAAI,2BAAAR,MAAA,CACjCX,8BAAa,CAACoB,QAAQ,sCAAAT,MAAA,CACXX,8BAAa,CAACqB,SAAS,kCAAAV,MAAA,CAC3BX,8BAAa,CAACsB,QAAQ,mCAAAX,MAAA,CACrBX,8BAAa,CAACuB,mBAAmB,+BAAAZ,MAAA,CACrCX,8BAAa,CAACwB,eAAe,8DAAAb,MAAA,CAI9BX,0BAAS,CAACC,OAAO,sDAAAU,MAAA,CAIrBX,wBAAO,CAACuB,mBAAmB,mCAAAZ,MAAA,CAClBX,wBAAO,CAAC2B,mBAAmB,+BAAAhB,MAAA,CAC/BX,wBAAO,CAAC4B,YAAY,2BAAAjB,MAAA,CACxBX,wBAAO,CAAC6B,QAAQ,qBAAAlB,MAAA,CACtBX,wBAAO,CAAC8B,IAAI,CAAE,CAAC;AAC9B,C","sources":["webpack://typescript/webpack/bootstrap","webpack://typescript/webpack/runtime/compat get default export","webpack://typescript/webpack/runtime/define property getters","webpack://typescript/webpack/runtime/hasOwnProperty shorthand","webpack://typescript/webpack/runtime/make namespace object","webpack://typescript/external commonjs \"k6\"","webpack://typescript/external commonjs \"k6/http\"","webpack://typescript/external commonjs \"k6/execution\"","webpack://typescript/./src/default-test.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/http\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/execution\");","import { sleep, check } from 'k6';\nimport { Options } from 'k6/options';\nimport http from 'k6/http';\nimport exec from 'k6/execution';\n\nexport let options: Options = {\n  vus: 50,\n  duration: '10s'\n};\n\nexport default () => {\n  const res = http.get('https://test-api.k6.io');\n  check(res, {\n    'status is 200': () => res.status === 200,\n  });\n  sleep(1);\n};\n\n\nexport function iter(): void {\n  console.log(`Execution context\n    Instance info\n    -------------\n    Vus active: ${exec.instance.vusActive}\n    Iterations completed: ${exec.instance.iterationsCompleted}\n    Iterations interrupted:  ${exec.instance.iterationsInterrupted}\n    Iterations completed:  ${exec.instance.iterationsCompleted}\n    Iterations active:  ${exec.instance.vusActive}\n    Initialized vus:  ${exec.instance.vusInitialized}\n    Time passed from start of run(ms):  ${exec.instance.currentTestRunDuration}\n\n    Scenario info\n    -------------\n    Name of the running scenario: ${exec.scenario.name}\n    Executor type: ${exec.scenario.executor}\n    Scenario start timestamp: ${exec.scenario.startTime}\n    Percenatage complete: ${exec.scenario.progress}\n    Iteration in instance: ${exec.scenario.iterationInInstance}\n    Iteration in test: ${exec.scenario.iterationInTest}\n\n    Test info\n    ---------\n    All test options: ${exec.test.options}\n\n    VU info\n    -------\n    Iteration id: ${exec.vu.iterationInInstance}\n    Iteration in scenario: ${exec.vu.iterationInScenario}\n    VU ID in instance: ${exec.vu.idInInstance}\n    VU ID in test: ${exec.vu.idInTest}\n    VU tags: ${exec.vu.tags}`);\n}"],"names":["sleep","check","http","exec","options","vus","duration","res","get","statusIs200","status","iter","console","log","concat","instance","vusActive","iterationsCompleted","iterationsInterrupted","vusInitialized","currentTestRunDuration","scenario","name","executor","startTime","progress","iterationInInstance","iterationInTest","test","vu","iterationInScenario","idInInstance","idInTest","tags"],"sourceRoot":""}