{"version":3,"file":"tidb-createGE-test.js","mappings":"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","sources":["webpack://typescript/external commonjs \"https://jslib.k6.io/k6-utils/1.2.0/index.js\"","webpack://typescript/external commonjs \"k6/metrics\"","webpack://typescript/external commonjs \"k6/x/sql\"","webpack://typescript/webpack/bootstrap","webpack://typescript/webpack/runtime/compat get default export","webpack://typescript/webpack/runtime/define property getters","webpack://typescript/webpack/runtime/hasOwnProperty shorthand","webpack://typescript/webpack/runtime/make namespace object","webpack://typescript/external commonjs \"k6/execution\"","webpack://typescript/./src/tidb-createGE-test.ts"],"sourcesContent":["module.exports = require(\"https://jslib.k6.io/k6-utils/1.2.0/index.js\");","module.exports = require(\"k6/metrics\");","module.exports = require(\"k6/x/sql\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/execution\");","/* @ts-ignore */\nimport sql from 'k6/x/sql';\n/* @ts-ignore */\nimport { randomIntBetween } from \"https://jslib.k6.io/k6-utils/1.2.0/index.js\";\nimport exec from 'k6/execution';\nimport { Counter } from 'k6/metrics';\n\nconst SPLIT = ', ';\n// Database connection setup\nconst dbHost = __ENV.DB_HOST || \"gateway01.ap-southeast-1.prod.aws.tidbcloud.com\";\nconst dbPort = __ENV.DB_PORT || \"4000\";\nconst dbName = __ENV.DB_NAME || \"test\";\nconst dbUser = __ENV.DB_USER || \"gL64LSe6ggDbrgk.root\";\nconst dbPassword = __ENV.DB_PASSWORD || \"password\";\n\nconst connectionString = `${dbUser}:${dbPassword}@tcp(${dbHost}:${dbPort})/${dbName}?tls=skip-verify`;\nconst db = sql.open('mysql', connectionString);\nconst tables = new Counter('total_tables');\n\nlet scenarios = {\n    createGE: {\n        executor: 'ramping-vus',\n        exec: 'createGE',\n        startVUs: 20,\n        startTime: '0',\n        stages: [\n            { duration: '1m', target: 50 }, // Stay at 50 VUs for the first 5 minutes\n            { duration: '4m', target: 20 }, // Reduce to 20 VUs over the next 10 minutes\n            { duration: '1m', target: 10 }   // Further reduce to 10 VUs for the last 5 minutes\n        ],\n        gracefulRampDown: '30s',\n    }\n};\n\n// Options configuration\nexport const options = {\n    discardResponseBodies: true,\n    scenarios: scenarios,\n};\n\nexport function setup() {\n    db.exec(`CREATE TABLE IF NOT EXISTS test.ge_metadata (\n        id INT AUTO_INCREMENT PRIMARY KEY,\n        tenant_id INT NOT NULL,\n        ge_name VARCHAR(255) NOT NULL,\n        columns TEXT NOT NULL,\n        indexes TEXT NOT NULL\n    );`);\n}\n\n// Teardown function\nexport function teardown() {\n    db.close();\n}\n\n// Function to generate random columns\nfunction generateRandomColumns(): string[] {\n    const types = ['VARCHAR(255)', 'INT', 'DATETIME(3)'];\n    let columns = [];\n    let numCols = randomIntBetween(3, 10); // Generate between 3 to 10 columns\n    let columnNames = new Set(); // To track unique column names\n\n    while (columns.length < numCols) {\n        let type = types[randomIntBetween(0, types.length - 1)];\n        let colName = `col_${randomIntBetween(1000, 9999)}`;\n\n        // Ensure the column name is unique\n        if (!columnNames.has(colName)) {\n            columns.push(`${colName} ${type}`);\n            columnNames.add(colName); // Add to the set of known names\n        }\n    }\n\n    return columns;\n}\n\n// Function to select random indexes from the columns\nfunction selectRandomIndexes(columns: string[], maxIndexes: number): string[] {\n    let columnNames = columns.map(col => col.split(' ')[0]);\n    let selectedIndexes = new Set(); // To keep track of selected indexes\n    let indexes = [];\n\n    // Adjust to exclude primary key column (assuming it's the first column)\n    columnNames.shift();\n\n    while (indexes.length < Math.min(maxIndexes, columnNames.length)) {\n        let randomIndex = randomIntBetween(0, columnNames.length - 1);\n        let indexName = columnNames[randomIndex];\n\n        // Check if already selected, if not, add to the indexes array\n        if (!selectedIndexes.has(indexName)) {\n            indexes.push(indexName);\n            selectedIndexes.add(indexName);\n        }\n    }\n\n    return indexes;\n}\n\n// Create GE scenario\nexport function createGE(): void {\n    const tenantId = 1 + exec.vu.idInTest;\n    const geName = `ge_${exec.vu.iterationInScenario}`;\n    const columns = generateRandomColumns();\n    const indexes = selectRandomIndexes(columns, 2); // Select up to 2 columns for indexing\n    let primaryKeyCol = columns[0].split(' ')[0]; // Use the first column as the primary key\n    let createTableSQL = `CREATE TABLE tenant_${tenantId}_${geName} (${columns.join(SPLIT)}, PRIMARY KEY (${primaryKeyCol}));`;\n    let insertMetaSQL = `INSERT INTO ge_metadata (tenant_id, ge_name, columns, indexes) VALUES (${tenantId},'${geName}','${columns.join(SPLIT)}','${indexes.join(SPLIT)}');`\n\n    // Create table\n    try {\n        db.exec(createTableSQL);\n        console.log(`Table tenant_${tenantId}_${geName} created successfully`);\n\n        // Create indexes\n        indexes.forEach(indexCol => {\n            let createIndexSQL = `CREATE INDEX IF NOT EXISTS idx_${indexCol} ON tenant_${tenantId}_${geName} (${indexCol});`;\n            try {\n                db.exec(createIndexSQL);\n                console.log(`Index created successfully on column: ${indexCol}`);\n            } catch (error) {\n                console.error(`Error creating index on column ${indexCol} for tenant_${tenantId}_${geName}: ${error}`);\n                console.error(`Failed SQL: ${createIndexSQL}`);\n            }\n        });\n\n        // Insert metadata\n        try {\n            db.exec(insertMetaSQL);\n            tables.add(1);\n        } catch (error) {\n            console.error(`Error inserting metadata for tenant_${tenantId}_${geName}: ${error}`);\n            console.error(`Failed SQL: ${insertMetaSQL}`);\n        }\n    } catch (error) {\n        if (error.value.number != 1050) {\n            console.error(`Error creating table tenant_${tenantId}_${geName}: ${error}`);\n            console.error(`Failed SQL: ${createTableSQL}`);\n            return; // Exit the function if table creation fails\n        }\n    }\n}\n\n/* \nResult\n\ndata_received........: 0 B 0 B/s\ndata_sent............: 0 B 0 B/s\niteration_duration...: avg=51.16s min=68.45µs med=57.7s max=1m12s p(90)=1m7s p(95)=1m9s\niterations...........: 230 0.602096/s\ntotal_tables.........: 230 0.602096/s\nvus..................: 0   min=0      max=50\nvus_max..............: 50  min=50     max=50\n\n\nDB side avg create \n\n*/"],"names":["sql","randomIntBetween","exec","Counter","SPLIT","dbHost","__ENV","DB_HOST","dbPort","DB_PORT","dbName","DB_NAME","dbUser","DB_USER","dbPassword","DB_PASSWORD","connectionString","concat","db","open","tables","scenarios","createGE","executor","startVUs","startTime","stages","duration","target","gracefulRampDown","options","discardResponseBodies","setup","teardown","close","generateRandomColumns","types","columns","numCols","columnNames","Set","length","type","colName","has","push","add","selectRandomIndexes","maxIndexes","map","col","split","selectedIndexes","indexes","shift","Math","min","randomIndex","indexName","tenantId","vu","idInTest","geName","iterationInScenario","primaryKeyCol","createTableSQL","join","insertMetaSQL","console","log","forEach","indexCol","createIndexSQL","error","value","number"],"sourceRoot":""}