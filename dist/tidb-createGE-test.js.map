{"version":3,"file":"tidb-createGE-test.js","mappings":"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","sources":["webpack://typescript/external commonjs \"https://jslib.k6.io/k6-utils/1.2.0/index.js\"","webpack://typescript/external commonjs \"k6/metrics\"","webpack://typescript/external commonjs \"k6/x/sql\"","webpack://typescript/webpack/bootstrap","webpack://typescript/webpack/runtime/compat get default export","webpack://typescript/webpack/runtime/define property getters","webpack://typescript/webpack/runtime/hasOwnProperty shorthand","webpack://typescript/webpack/runtime/make namespace object","webpack://typescript/external commonjs \"k6/execution\"","webpack://typescript/./src/tidb-createGE-test.ts"],"sourcesContent":["module.exports = require(\"https://jslib.k6.io/k6-utils/1.2.0/index.js\");","module.exports = require(\"k6/metrics\");","module.exports = require(\"k6/x/sql\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"k6/execution\");","/* @ts-ignore */\nimport sql from 'k6/x/sql';\n/* @ts-ignore */\nimport {randomIntBetween} from \"https://jslib.k6.io/k6-utils/1.2.0/index.js\";\nimport exec from 'k6/execution';\nimport {Counter} from 'k6/metrics';\n\nconst SPLIT = ', ';\n// Database connection setup\nconst dbHost = __ENV.DB_HOST || \"10.0.132.214\";\nconst dbPort = __ENV.DB_PORT || \"4000\";\nconst dbName = __ENV.DB_NAME || \"test\";\nconst dbUser = __ENV.DB_USER || \"root\";\nconst dbPassword = __ENV.TIDB_PASSWORD || \"password\";\n\nconst connectionString = `${dbUser}:${dbPassword}@tcp(${dbHost}:${dbPort})/${dbName}?tls=skip-verify`;\nconst db = sql.open('mysql', connectionString);\nconst tables = new Counter('total_tables');\nconst types = ['VARCHAR(255)', 'BIGINT', 'DATETIME(5)'];\n\nlet scenarios = {\n    createGE: {\n        executor: 'ramping-vus',\n        exec: 'createGE',\n        startVUs: 20,\n        startTime: '0',\n        stages: [\n            {duration: '1m', target: 50}, // Stay at 50 VUs for the first 5 minutes\n            {duration: '4m', target: 20}, // Reduce to 20 VUs over the next 10 minutes\n            {duration: '1m', target: 10}   // Further reduce to 10 VUs for the last 5 minutes\n        ],\n        gracefulRampDown: '30s',\n    }\n};\n\n// Options configuration\nexport const options = {\n    discardResponseBodies: true,\n    scenarios: scenarios,\n};\n\nexport function setup() {\n    db.exec(`CREATE TABLE IF NOT EXISTS test.ge_metadata\n             (\n                 id        INT AUTO_INCREMENT PRIMARY KEY,\n                 tenant_id INT          NOT NULL,\n                 ge_name   VARCHAR(255) NOT NULL,\n                 columns   JSON         NOT NULL,\n                 indexes   JSON         NOT NULL\n             ) AUTO_ID_CACHE 1;`);\n}\n\n// Teardown function\nexport function teardown() {\n    db.close();\n}\n\n// Function to generate random columns\nfunction generateRandomColumns(): Column[] {\n    let columns: Column[] = [];\n    let numCols = randomIntBetween(3, 10); // Generate between 3 to 10 columns\n    let columnNames = new Set<string>(); // To track unique column names\n\n    while (columns.length < numCols) {\n        let type = types[randomIntBetween(0, types.length - 1)];\n        let colName = `col_${randomIntBetween(1000, 9999)}`;\n\n        // Ensure the column name is unique\n        if (!columnNames.has(colName)) {\n            columns.push({name: colName, type: type});\n            columnNames.add(colName); // Add to the set of known names\n        }\n    }\n    return columns;\n}\n\n// Function to select random indexes from the columns\nfunction selectRandomIndexes(columns: Column[], maxIndexes: number): Column[] {\n    let selectedIndexes = new Set<Column>(); // To keep track of selected indexes\n    while (selectedIndexes.size < Math.min(maxIndexes, columns.length)) {\n        const randomIndex = randomIntBetween(0, columns.length - 1);\n        selectedIndexes.add(columns[randomIndex]);\n    }\n    return Array.from(selectedIndexes);\n}\n\n// Create GE scenario\nexport function createGE(): void {\n    const tenantId = 1 + exec.vu.idInTest;\n    const geName = `ge_${exec.vu.iterationInScenario}`;\n    const columns = generateRandomColumns();\n    const [primaryKeyCol, ...otherColumns] = columns;\n    const indexes = selectRandomIndexes(otherColumns, 2);  // Select up to 2 columns for indexing\n    const createTableSQL = `CREATE TABLE tenant_${tenantId}_${geName}\n    (\n        ${primaryKeyCol.name}\n        ${primaryKeyCol.type === 'BIGINT' ? 'BIGINT AUTO_RANDOM' : primaryKeyCol.type}\n        ${otherColumns.map(({name, type}) => `, ${name} ${type}`).join('')},\n        PRIMARY KEY ( ${primaryKeyCol.name} )\n        );`;\n    const insertMetaSQL = `INSERT INTO ge_metadata (tenant_id, ge_name, columns, indexes)\n                           VALUES (${tenantId}, '${geName}',\n                                   '${JSON.stringify(columns)}',\n                                   '${JSON.stringify(indexes)}');`\n\n    // Create table\n    try {\n        db.exec(createTableSQL);\n        // Create indexes\n        indexes.forEach(indexCol => {\n            let createIndexSQL = `CREATE INDEX IF NOT EXISTS idx_${indexCol.name} ON tenant_${tenantId}_${geName} (${indexCol.name});`;\n            try {\n                db.exec(createIndexSQL);\n            } catch (error) {\n                console.error(`Error creating index on column ${indexCol.name} for tenant_${tenantId}_${geName}: ${error}`);\n                console.error(`Failed SQL: ${createIndexSQL}`);\n            }\n        });\n\n        // Insert metadata\n        try {\n            db.exec(insertMetaSQL);\n            tables.add(1);\n            console.log(`Table tenant_${tenantId}_${geName} created successfully`);\n        } catch (error) {\n            console.error(`Error inserting metadata for tenant_${tenantId}_${geName}: ${error}`);\n            console.error(`Failed SQL: ${insertMetaSQL}`);\n        }\n    } catch (error) {\n        if (isDBError(error) && error.value.number != 1050) {\n            console.error(`Error creating table tenant_${tenantId}_${geName}: ${error}`);\n            console.error(`Failed SQL: ${createTableSQL}`);\n            return; // Exit the function if table creation fails\n        }\n    }\n}\n\n/* \nResult\n\ndata_received........: 0 B 0 B/s\ndata_sent............: 0 B 0 B/s\niteration_duration...: avg=51.16s min=68.45µs med=57.7s max=1m12s p(90)=1m7s p(95)=1m9s\niterations...........: 230 0.602096/s\ntotal_tables.........: 230 0.602096/s\nvus..................: 0   min=0      max=50\nvus_max..............: 50  min=50     max=50\n\n\nDB side avg create \n\n*/"],"names":["sql","randomIntBetween","exec","Counter","SPLIT","dbHost","__ENV","DB_HOST","dbPort","DB_PORT","dbName","DB_NAME","dbUser","DB_USER","dbPassword","TIDB_PASSWORD","connectionString","concat","db","open","tables","types","scenarios","createGE","executor","startVUs","startTime","stages","duration","target","gracefulRampDown","options","discardResponseBodies","setup","teardown","close","generateRandomColumns","columns","numCols","columnNames","Set","length","type","colName","has","push","name","add","selectRandomIndexes","maxIndexes","selectedIndexes","size","Math","min","randomIndex","Array","from","tenantId","vu","idInTest","geName","iterationInScenario","_columns","_toArray","primaryKeyCol","otherColumns","slice","indexes","createTableSQL","map","_ref","join","insertMetaSQL","JSON","stringify","forEach","indexCol","createIndexSQL","error","console","log","isDBError","value","number"],"sourceRoot":""}