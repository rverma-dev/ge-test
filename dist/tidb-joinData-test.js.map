{"version":3,"file":"tidb-joinData-test.js","mappings":"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","sources":["webpack://typescript/external commonjs \"https://jslib.k6.io/k6-utils/1.2.0/index.js\"","webpack://typescript/external commonjs \"k6/metrics\"","webpack://typescript/external commonjs \"k6/x/sql\"","webpack://typescript/webpack/bootstrap","webpack://typescript/webpack/runtime/compat get default export","webpack://typescript/webpack/runtime/define property getters","webpack://typescript/webpack/runtime/hasOwnProperty shorthand","webpack://typescript/webpack/runtime/make namespace object","webpack://typescript/./src/tidb-joinData-test.ts"],"sourcesContent":["module.exports = require(\"https://jslib.k6.io/k6-utils/1.2.0/index.js\");","module.exports = require(\"k6/metrics\");","module.exports = require(\"k6/x/sql\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/* @ts-ignore */\nimport sql from 'k6/x/sql';\n/* @ts-ignore */\nimport { randomString, randomIntBetween } from \"https://jslib.k6.io/k6-utils/1.2.0/index.js\";\n\nimport { Counter } from 'k6/metrics';\n\n// Database connection setup\nconst db = sql.open('mysql', 'gL64LSe6ggDbrgk.root:password@tcp(gateway01.ap-southeast-1.prod.aws.tidbcloud.com:4000)/test?tls=skip-verify');\nconst reads = new Counter('join_reads');\n\ninterface GeMetadata {\n    tenant_id: number;\n    ge_name: string;\n    columns: string;\n    indexes: string;\n}\n\nlet scenarios = {\n    readJoinData: {\n        executor: 'ramping-vus',\n        exec: 'readJoinData',\n        startTime: '10m', // Start after 15 minutes\n        startVUs: 50,\n        stages: [\n            { duration: '5m', target: 50 }  // Ramp up to 50 VUs over 5 minutes\n        ],\n        gracefulRampDown: '30s',\n    }\n};\n\n\n// Options configuration\nexport const options = {\n    discardResponseBodies: true,\n    scenarios: scenarios,\n};\n\nexport function setup() {\n    let checkTableQuery = `SELECT COUNT(*) AS table_exists \n                           FROM information_schema.tables \n                           WHERE table_schema = 'test' \n                             AND table_name = 'ge_metadata';`;\n\n    let res = sql.query(db, checkTableQuery);\n    if (res[0].table_exists === 0) {\n        throw new Error(\"Table 'ge_metadata' does not exist. Terminating the script.\");\n    } else {\n        console.log(\"Table 'ge_metadata' exists. Proceeding with the script.\");\n    }\n    // Additional setup logic, if any...\n}\n\n// Teardown function\nexport function teardown() {\n    db.close();\n}\n\nfunction readGeData(limit: number): GeMetadata[] {\n    let query = `SELECT tenant_id, ge_name, columns, indexes FROM ge_metadata ORDER BY RAND() LIMIT ${limit};`;\n    let resultSet = sql.query(db, query);\n    let geData: GeMetadata[] = [];\n\n    for (let row of resultSet) {\n        geData.push({\n            tenant_id: parseInt(String.fromCharCode(...row.tenant_id), 10),\n            ge_name: String.fromCharCode(...row.ge_name),\n            columns: String.fromCharCode(...row.columns),\n            indexes: String.fromCharCode(...row.indexes)\n        });\n    }\n    return geData;\n}\n\nfunction splitColumnsAndIndexes(metadata: GeMetadata): { cols: string[], indexes: string[] } {\n    const cols = metadata.columns.split(',').map(col => col.trim().split(' ')[0]);\n    const indexes = metadata.indexes.split(',').map(index => index.trim());\n    return { cols, indexes };\n}\n\nfunction generateJoinQuery(metadata1: GeMetadata, metadata2: GeMetadata, joinType: number): string {\n    const { cols: cols1, indexes: indexes1 } = splitColumnsAndIndexes(metadata1);\n    const { cols: cols2, indexes: indexes2 } = splitColumnsAndIndexes(metadata2);\n\n    let joinCol1: string, joinCol2: string;\n    switch (joinType) {\n        case 1: // Join between indexed and indexed columns\n            joinCol1 = indexes1[randomIntBetween(0, indexes1.length - 1)];\n            joinCol2 = indexes2[randomIntBetween(0, indexes2.length - 1)];\n            break;\n        case 2: // Join between indexed and non-indexed columns\n            joinCol1 = indexes1[randomIntBetween(0, indexes1.length - 1)];\n            if (!joinCol1) {\n                break;\n            }\n            joinCol2 = cols2.filter(col => !indexes2.includes(col))[randomIntBetween(0, cols2.length - 1)];\n            break;\n        default: // Join between two non-indexed columns\n            joinCol1 = cols1.filter(col => !indexes1.includes(col))[randomIntBetween(0, cols1.length - 1)];\n            joinCol2 = cols2.filter(col => !indexes2.includes(col))[randomIntBetween(0, cols2.length - 1)];\n            break;\n    }\n\n    return `SELECT * FROM tenant_${metadata1.tenant_id}_${metadata1.ge_name} a JOIN tenant_${metadata2.tenant_id}_${metadata2.ge_name} b ON a.${joinCol1} = b.${joinCol2} LIMIT 10;`;\n}\n\nexport function readJoinData() {\n    let [metadata1, metadata2] = readGeData(2);\n    if (!metadata1 || !metadata2) {\n        console.error('Insufficient GE metadata found for join reading');\n        return;\n    }\n\n    let queryType = Math.random() < 0.5 ? 1 : (Math.random() < 0.67 ? 2 : 3); // Randomly choose query type\n    let joinQuery = generateJoinQuery(metadata1, metadata2, queryType);\n\n    try {\n        let response = db.query(joinQuery);\n        if (response != null) {\n            console.log(`Read query type ${queryType} executed successfully`);\n            reads.add(1);\n        }\n    } catch (error) {\n        console.error(`Error executing join read query type ${queryType}: ${error}`);\n    }\n}\n\n/* \nResult\n\ndata_received........: 0 B   0 B/s\ndata_sent............: 0 B   0 B/s\niteration_duration...: avg=1.17s min=93.83µs med=363.85ms max=35.11s p(90)=786.17ms p(95)=1.69s\niterations...........: 13555 14.644529/s\njoin_reads...........: 8600  9.291254/s\nvus..................: 2     min=0       max=50\nvus_max..............: 50    min=50      max=50\n\n*/"],"names":["sql","randomIntBetween","Counter","db","open","reads","scenarios","readJoinData","executor","exec","startTime","startVUs","stages","duration","target","gracefulRampDown","options","discardResponseBodies","setup","checkTableQuery","res","query","table_exists","Error","console","log","teardown","close","readGeData","limit","concat","resultSet","geData","_iterator","_createForOfIteratorHelper","_step","s","n","done","row","value","push","tenant_id","parseInt","String","fromCharCode","apply","_toConsumableArray","ge_name","columns","indexes","err","e","f","splitColumnsAndIndexes","metadata","cols","split","map","col","trim","index","generateJoinQuery","metadata1","metadata2","joinType","_splitColumnsAndIndex","cols1","indexes1","_splitColumnsAndIndex2","cols2","indexes2","joinCol1","joinCol2","length","filter","includes","_readGeData","_readGeData2","_slicedToArray","error","queryType","Math","random","joinQuery","response","add"],"sourceRoot":""}